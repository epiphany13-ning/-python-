### 跑步锻炼597
是否需要重刷：要
主要知识点：datetime模块的导入及使用
eg：
import datetime
start = datetime.date(2020,1,1)
day = start.day#显示这里是第几天，start可以调用day，month以及year
day = datetime.timedelta(数字)#可以对日期进行加和操作
day = start.week() #这里可以显示出现在是周几#注意() 0表示周一，6表示周日
## 594 蛇形填数
是否需要重刷：否
主要知识点：
1 暴力# 注意点：检查数值，不要在数值上出现错误
2 找规律：常见找规律：差值，坐标，递归
### 杨辉三角 1457
是否需要重刷：不需要
主要知识点：思维题，组合数，二分法
自己靠自己的暴力过掉了40%已经很厉害啦，不需要强求
唯一需要注意的是：如何打印下三角矩阵
for i in range(1,n):
    for j in range(1,i)#注意这里以i为下限就是下三角矩阵
### 1463 货物摆放
#是否需要重刷：要
主要知识点：找出约数，并且不断优化
#思路问题：自己一开始想的是直接放弃不做，后来发现这道题没有没有学过的算法，还是值得一试。
#注意点：如果代码运行时间超过了10分钟，那直接break吧。不要再尝试了，这个太过于暴力啦。
大佬题解链接：
https://so.csdn.net/so/search?q=%E8%B4%A7%E7%89%A9%E6%91%86%E6%94%BEpython&t=&u=&utm_term=%E8%B4%A7%E7%89%A9%E6%91%86%E6%94%BE&request_id=171150613316800225551728&opensearch_request_id=171150613316800225551728&urw=
大佬思路：
解决这道题最先想到也是最容易想到的是暴力解法，通过三层遍历找到所有因子相乘之和能够等于2021041820210418的三个数。但是种做法是不现实的，数那么大也许要跑到比赛结束才出结果，因此我们需要对这个解法进行一下优化。我们可以先求出 2021041820210418所有约数，然后让这些约数相乘看他们的的乘积是否与2021041820210418值相等，若相等，解决方案数+1。可能有同学不懂为什么要先求出所有约数，然后再来求积呢？因为求积也是一项大工程，在茫茫数字中，约数只占极少数部分，其他数都是不相干的，这些不相干的数相乘之和也必然不是目标值，如果参与运算的话会产生大量无价值结果，因此，先求约数再来计算会比暴力解法效率高些。元得到约数后，我的方法是直接使用三层for循环列举它所有排列组合，然后匹配得出结果，但这么做的话挺暴力的。
# 重识暴力算法：
在这里我说一下我对暴力解法的个人理解，希望大家不要对暴力解法有任何偏见。暴力解法固然不好，时间空间上都造成极大的浪费，缺点多多，但多少还是有个优点的，它的优点就是我们比较容易想到。在竟赛的填空题中我们不妨试一下，等个8~10秒又如何？只要不超过30秒都是可以接受的。也许你花15分钟设计的优化代码能够在15ms内得出结果，，而花10分钟写的暴力解法需要在10000ms之后才能得oe出结果，那又如何？总体花费的时间或许暴力解法会少一些。因此我建议，在填空题中如果思考三五分钟还是没有得出理想的算法来解决题目的话，就试试稍微优化的暴力解法来解决。B
